Vagrant.configure(2) do |config|
  config.vm.box = "file://" + `ls -1t *.box | head -n1`.strip!
  config.vm.network "forwarded_port", guest: 8443, host: 8443, auto_correct: true
  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.ssh.forward_agent = true
  config.ssh.insert_key = false
  config.ssh.username = ENV['BOOT2LXD_USER'] || "boot2lxd"
  config.ssh.private_key_path = "files/insecure_private_key"

  # detect host cpu count and total memory
  if RbConfig::CONFIG["host_os"] =~ /linux/
    host_cpu_count = `nproc`.to_i
    host_memory_mb = `grep "MemTotal" /proc/meminfo | sed -e "s/MemTotal://" -e "s/ kB//"`.to_i / 1024
  elsif RbConfig::CONFIG["host_os"] =~ /darwin/
    host_cpu_count = `sysctl -n hw.ncpu`.to_i
    host_memory_mb = `sysctl -n hw.memsize`.to_i / 1024 / 1024
  else
    host_cpu_count = `wmic cpu get NumberOfCores`.split("\n")[2].to_i
    host_memory_mb = `wmic OS get TotalVisibleMemorySize`.split("\n")[2].to_i / 1024
  end

  config.vm.provider "virtualbox" do |p, override|
    p.customize ["modifyvm", :id, "--memory", ENV['BOOT2LXD_MEMORY'] || host_memory_mb.fdiv(4).to_i]
    p.customize ["modifyvm", :id, "--cpus", ENV['BOOT2LXD_CPUS'] || host_cpu_count]
    p.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    p.customize ["modifyvm", :id, "--audio", "none"]

    override.vm.network "private_network", type: "dhcp"
  end

  config.vm.provision "provision", type: "shell", :run => "always", :privileged => false, inline: <<-"EOF"
    uname -a
    df -h
    free -m
    groups
  EOF
end
