Vagrant.configure(2) do |config|
  box_name = `cd build/boxes && ls -1t *.box | head -n1`.strip!

  config.vm.box = "file://#{box_name}"
  config.vm.network "forwarded_port", guest: 8443, host: 8443, auto_correct: true
  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.ssh.forward_agent = true
  config.ssh.insert_key = false
  config.ssh.username = ENV['BOOT2LXD_USER'] || "boot2lxd"
  config.ssh.private_key_path = "files/insecure_private_key"

  # detect host cpu count and total memory
  if RbConfig::CONFIG["host_os"] =~ /linux/
    host_cpu_count = `nproc`.to_i
    host_memory_mb = `grep "MemTotal" /proc/meminfo | sed -e "s/MemTotal://" -e "s/ kB//"`.to_i / 1024
  elsif RbConfig::CONFIG["host_os"] =~ /darwin/
    host_cpu_count = `sysctl -n hw.ncpu`.to_i
    host_memory_mb = `sysctl -n hw.memsize`.to_i / 1024 / 1024
  else
    host_cpu_count = `wmic cpu get NumberOfCores`.split("\n")[2].to_i
    host_memory_mb = `wmic OS get TotalVisibleMemorySize`.split("\n")[2].to_i / 1024
  end

  config.vm.provider "virtualbox" do |p, override|
    p.customize ["modifyvm", :id, "--memory", ENV['BOOT2LXD_MEMORY'] || host_memory_mb.fdiv(4).to_i]
    p.customize ["modifyvm", :id, "--cpus", ENV['BOOT2LXD_CPUS'] || host_cpu_count]
    p.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    p.customize ["modifyvm", :id, "--audio", "none"]

    # Add a second disk to system using vagrant ()https://gist.github.com/leifg/4713995)
    zfs_disk = File.join(File.dirname(File.expand_path(__FILE__)), 'storage', box_name.chomp('.box') + '-disk1.vdi')
    unless File.exist?(zfs_disk)
      p.customize ['createhd', '--filename', zfs_disk, '--format', 'VDI', '--size', 80 * 1024]
    end
    p.customize ['storageattach', :id, '--storagectl', 'IDE Controller', '--port', 0, '--device', 1, '--type', 'hdd', '--medium', zfs_disk]

    override.vm.network "private_network", type: "dhcp"
  end

  config.vm.provision "provision", type: "shell", :run => "always", :privileged => true, inline: <<-"EOF"
    if zpool list | grep -q default; then
      zpool list
      exit 0
    fi

    cat <<SEED | lxd init --preseed
config:
  core.https_address: '[::]:8443'
  core.trust_password: boot2lxd
storage_pools:
- name: default
  driver: zfs
  config:
    source: /dev/sdb
networks:
- name: lxdbr0
  type: bridge
  config:
    ipv4.address: auto
    ipv6.address: none
profiles:
- name: default
  devices:
    eth0:
      name: eth0
      nictype: bridged
      parent: lxdbr0
      type: nic
    root:
      path: /
      pool: default
      type: disk
SEED

    zpool list
  EOF
end
